name: Build Rent

on:
  push:
    branches: [microservices]

defaults:
  run:
    working-directory: ./RentMicroservice

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/rent

jobs:

  build-rent:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write # needed for signing the images with GitHub OIDC Token

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'
          cache-dependency-path: './pom.xml' # optional

      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.8.7

      - name: Maven Package
        run: mvn package --file ./pom.xml

      - name: Install Cosign
        run: curl -L https://github.com/sigstore/cosign/releases/download/v2.4.0/cosign-linux-amd64 -o cosign && chmod +x cosign

      - name: Log in to the Container registry (GHCR)
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Sign Docker image
        run: |
          docker build -t ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:latest -f ./src/main/docker/Dockerfile.jvm .
          docker push ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:latest
          docker images
          ./cosign sign --yes ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:latest

      - name : Verify Image Signature
        run: ./cosign verify --certificate-identity-regexp=.* --certificate-oidc-issuer-regexp=.* --certificate-oidc-issuer=https://github.com/login/oauth  ${{env.REGISTRY}}/${{ env.IMAGE_NAME }}:latest