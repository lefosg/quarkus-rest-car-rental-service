name: Deploy Images

on:
  workflow_run:
    workflows: [ "Build Images" ]
    types:
      - completed


env:

  REGISTRY: ghcr.io

  FLEET_IMAGE_NAME: ${{ github.repository }}/fleet # github.repository as <account>/<repo>
  FLEET_DEPLOYMENT_MANIFEST_PATH: k8s/fleet-msvc.yaml

  USER_IMAGE_NAME: ${{ github.repository }}/user
  USER_DEPLOYMENT_MANIFEST_PATH: k8s/user_management-msvc.yaml

  RENT_IMAGE_NAME: ${{ github.repository }}/rent
  RENT_DEPLOYMENT_MANIFEST_PATH: k8s/rent-msvc.yaml

  RESOURCE_GROUP: "quarkus-car-rental-service-rg"
  CLUSTER_NAME: "car-rental-service"

jobs:

  deploy-fleet:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Fleet Container Attestation
        run: gh attestation verify oci://${{env.REGISTRY}}/${{env.FLEET_IMAGE_NAME}}:latest -R ${{ github.repository }}

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys Fleet Microservice
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ github.workspace }}/${{ env.FLEET_DEPLOYMENT_MANIFEST_PATH }}
          images: ${{ env.REGISTRY }}/${{ env.FLEET_IMAGE_NAME }}:microservices

  deploy-user:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify User Container Attestation
        run: gh attestation verify oci://${{env.REGISTRY}}/${{env.USER_IMAGE_NAME}}:latest -R ${{ github.repository }}

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys User Microservice
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ github.workspace }}/${{ env.USER_DEPLOYMENT_MANIFEST_PATH }}
          images: ${{ env.REGISTRY }}/${{ env.USER_IMAGE_NAME }}:microservices


  deploy-rent:
    permissions:
      actions: read
      contents: read
      id-token: write
    runs-on: ubuntu-latest

    steps:

      - uses: actions/checkout@v4

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify Rent Container Attestation
        run: gh attestation verify oci://${{env.REGISTRY}}/${{env.RENT_IMAGE_NAME}}:latest -R ${{ github.repository }}

      # Logs in with your Azure credentials
      - name: Azure login
        uses: azure/login@v1.4.6
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Use kubelogin to configure your kubeconfig for Azure auth
      - name: Set up kubelogin for non-interactive login
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.25'

      # Retrieves your Azure Kubernetes Service cluster's kubeconfig file
      - name: Get K8s context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.RESOURCE_GROUP }}
          cluster-name: ${{ env.CLUSTER_NAME }}
          admin: 'false'
          use-kubelogin: 'true'

      # Deploys Rent Microservice
      - name: Deploys application
        uses: Azure/k8s-deploy@v4
        with:
          action: deploy
          manifests: ${{ github.workspace }}/${{ env.RENT_DEPLOYMENT_MANIFEST_PATH }}
          images: ${{ env.REGISTRY }}/${{ env.RENT_IMAGE_NAME }}:microservices